@model List<EmployeeTask>
@{
    ViewData["Title"] = "Task Board";
}
<head>
    <script src="~/js/jquery-3.6.0.min.js"></script>
    <title>WorkItem Board</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <style>
        /* ✅ Kanban Board Styling */
        .kanban-board {
            display: flex;
            gap: 20px;
            padding: 20px;
            background-color: #f8f9fa;
        }

        .kanban-column {
            flex: 1;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 10px;
        }

        .kanban-header {
            font-size: 18px;
            font-weight: bold;
            text-align: center;
            padding: 10px;
            background: #007bff;
            color: white;
            border-radius: 8px 8px 0 0;
        }

        .kanban-task {
            background: white;
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
            border-radius: 5px;
            cursor: grab;
        }

            .kanban-task:hover {
                background: #f1f1f1;
            }

        .delete-btn {
            float: right;
            background: #dc3545;
            color: white;
            border: none;
            padding: 3px 7px;
            border-radius: 3px;
            cursor: pointer;
        }

        .delete-btn:hover {
            background: #c82333;
        }
    </style>
</head>


<div class="container">
    <h2 class="text-center my-4">Task Board</h2>
    <div class="text-center mt-4">
        @* <input type="text" id="newTaskInput" placeholder="Enter task title" class="form-control w-50 d-inline"> *@
        <a asp-action="Create"
           style="display: inline-block; margin-bottom: 10px; padding: 8px 12px;
              background-color: #28a745; color: white; text-decoration: none;
              border-radius: 5px; font-weight: bold;">
            ➕ Create New Task
        </a>
    </div>
    <div class="kanban-board">
        <div class="kanban-column" id="pending">
            <div class="kanban-header" style="background:gray">To Do</div>
        </div>

        <div class="kanban-column" id="inprogress">
            <div class="kanban-header">In progress</div>
        </div>

        <div class="kanban-column" id="completed">
            <div class="kanban-header bg-success">Completed</div>
        </div>
    </div> 

   
</div>

<script>
    $(document).ready(function () {
        console.log("🚀 Initializing Kanban Board...");

        var taskDataRaw = @Html.Raw(Json.Serialize(Model));
        var taskData = taskDataRaw.$values || taskDataRaw;

        console.log("✅ Loaded Tasks:", taskData);

        taskData.forEach(task => {
            appendTaskToBoard(task);
        });

        function makeDraggable(task) {
            task.draggable({
                revert: "invalid",
                zIndex: 100,
                helper: "clone"
            });
        }

        function attachDeleteEvent(task) {
            task.find(".delete-btn").on("click", function () {
                var taskId = $(this).parent().data("id");
                if (taskId) {
                    window.location.href = `/Home/Delete?id=${taskId}`;
                }
            });
        }

        function appendTaskToBoard(task) {
            let statusId = task.status.toLowerCase().replace(" ", ""); 
            let taskElement = $(`
                    <div class="kanban-task" data-id="${task.id}" draggable="true">
                        ${task.title}
                            <button class="delete-btn">❌ Delete</button>
                    </div>
                `);
            $("#" + statusId).append(taskElement);

            makeDraggable(taskElement);
            attachDeleteEvent(taskElement);
        }

        $(".kanban-task").click(function () {
            var taskId = $(this).data("id");
            var taskClass = $(this)[0].className;
            if (taskId && taskClass != 'delete-btn') {
                window.location.href = `/Home/Edit?id=${taskId}`;
            }
        });
        $(".kanban-column").droppable({
            accept: ".kanban-task",
            drop: function (event, ui) {
                var task = $(ui.draggable).clone();
                $(this).append(task);
                $(ui.draggable).remove();
                makeDraggable(task);
                attachDeleteEvent(task);
                var taskId = task.data("id");
                window.location.href = `/Home/Edit?id=${taskId}`;
            }
        });

        $("#addTask").click(function () {
            var taskTitle = $("#newTaskInput").val().trim();
            if (taskTitle === "") return;

            var newTask = {
                id: new Date().getTime(),
                title: taskTitle,
                status: "To Do"
            };
            appendTaskToBoard(newTask);
            $("#newTaskInput").val(""); 
        });

        function updateTaskStatus(taskId, newStatus) {
            console.log("Task ID:", taskId, "New Status:", newStatus);

            $.ajax({
                url: '/Home/Edit', 
                type: 'POST',
                contentType: "application/json",
                data: { id: taskId },
                success: function (response) {
                    console.log("✅ Task Updated Successfully:", response);
                },
                error: function (xhr) {

                    console.error("❌ Error updating task:", xhr.responseText);
                }
            });
        }
    });
</script>




